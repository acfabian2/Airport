package airport;

import airport.controller.FlightController;
import airport.controller.PassengerController;
import airport.model.Flight;
import airport.model.Location;
import airport.model.Passenger;
import airport.model.Plane;
import airport.response.Response;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;
    private final FlightController flightController = new FlightController();
    private final PassengerController passengerController = new PassengerController();

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < UserInterfaceTabs.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                UserInterfaceTabs.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            MonthCombo2.addItem("" + i);
            MONTH1.addItem("" + i);
            MonthCombo.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            DayCombo2.addItem("" + i);
            DAY1.addItem("" + i);
            DayCombo.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            MONTH2.addItem("" + i);
            DurationHoursCombo.addItem("" + i);
            DurationHoursCombo2.addItem("" + i);
            HoursCombo.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            DAY2.addItem("" + i);
            DurationMinutesCombo.addItem("" + i);
            DurationMinutesCombo2.addItem("" + i);
            MinutesCombo.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GlobalPanel = new airport.PanelRound();
        ViewActionsRoundPanel = new airport.PanelRound();
        CloseButton = new javax.swing.JButton();
        UserInterfaceTabs = new javax.swing.JTabbedPane();
        AdministratorPanel = new javax.swing.JPanel();
        UserButton = new javax.swing.JRadioButton();
        AdministratorButton = new javax.swing.JRadioButton();
        UserSelectCombo = new javax.swing.JComboBox<>();
        PassengerRegistrationPanel = new javax.swing.JPanel();
        CountryLabel2 = new javax.swing.JLabel();
        IdLabel4 = new javax.swing.JLabel();
        FirstNameLabel2 = new javax.swing.JLabel();
        LastNameLabel2 = new javax.swing.JLabel();
        BirthdateLabel = new javax.swing.JLabel();
        NumberPrefixLabel2 = new javax.swing.JLabel();
        PrefixField = new javax.swing.JTextField();
        IdField3 = new javax.swing.JTextField();
        BirthDateYearField2 = new javax.swing.JTextField();
        CountryField2 = new javax.swing.JTextField();
        NumberField2 = new javax.swing.JTextField();
        PhoneLabel2 = new javax.swing.JLabel();
        PlaceHolder = new javax.swing.JLabel();
        LastNameField2 = new javax.swing.JTextField();
        PlaceHolder2 = new javax.swing.JLabel();
        MonthCombo2 = new javax.swing.JComboBox<>();
        FirstNameField2 = new javax.swing.JTextField();
        PlaceHolder3 = new javax.swing.JLabel();
        DayCombo2 = new javax.swing.JComboBox<>();
        RegisterButton = new javax.swing.JButton();
        AirPlaneRegistrationPanel = new javax.swing.JPanel();
        IdLabel5 = new javax.swing.JLabel();
        IdField4 = new javax.swing.JTextField();
        BrandLabel = new javax.swing.JLabel();
        BrandField = new javax.swing.JTextField();
        ModelField = new javax.swing.JTextField();
        ModelLabel = new javax.swing.JLabel();
        MaxCapacityField = new javax.swing.JTextField();
        MaxCapacityLabel = new javax.swing.JLabel();
        AirlineField = new javax.swing.JTextField();
        AirlineLabel = new javax.swing.JLabel();
        CreateButton = new javax.swing.JButton();
        LocationRegistrationPanel = new javax.swing.JPanel();
        AirPortIdLabel = new javax.swing.JLabel();
        AirportIdField = new javax.swing.JTextField();
        AirportNameLabel = new javax.swing.JLabel();
        AirportNameField = new javax.swing.JTextField();
        AirportCityField = new javax.swing.JTextField();
        AirportCityLabel = new javax.swing.JLabel();
        AirportCountry = new javax.swing.JLabel();
        AirportCountryField = new javax.swing.JTextField();
        AirportLatitudeField = new javax.swing.JTextField();
        AirportLatitudeLabel = new javax.swing.JLabel();
        AirportLongitudeLabel = new javax.swing.JLabel();
        AirportLongitudeField = new javax.swing.JTextField();
        CreateButton2 = new javax.swing.JButton();
        FlightRegistrationPanel = new javax.swing.JPanel();
        IdLabel6 = new javax.swing.JLabel();
        IdField5 = new javax.swing.JTextField();
        PlaneLabel = new javax.swing.JLabel();
        PlaneCombo = new javax.swing.JComboBox<>();
        LocationCombo = new javax.swing.JComboBox<>();
        DepartureLocationLabel = new javax.swing.JLabel();
        ArrivalLocationCombo = new javax.swing.JComboBox<>();
        ArrivalLocationLabel = new javax.swing.JLabel();
        ScaleLocationLabel = new javax.swing.JLabel();
        ScaleLocationCombo = new javax.swing.JComboBox<>();
        DurationLabel2 = new javax.swing.JLabel();
        DurationLabel = new javax.swing.JLabel();
        DepartureDateLabel = new javax.swing.JLabel();
        DepartureDateCombo = new javax.swing.JTextField();
        PlaceHolder4 = new javax.swing.JLabel();
        MONTH1 = new javax.swing.JComboBox<>();
        PlaceHolder7 = new javax.swing.JLabel();
        DAY1 = new javax.swing.JComboBox<>();
        PlaceHolder8 = new javax.swing.JLabel();
        MONTH2 = new javax.swing.JComboBox<>();
        PlaceHolder9 = new javax.swing.JLabel();
        DAY2 = new javax.swing.JComboBox<>();
        DurationHoursCombo = new javax.swing.JComboBox<>();
        PlaceHolder5 = new javax.swing.JLabel();
        DurationMinutesCombo = new javax.swing.JComboBox<>();
        PlaceHolder46 = new javax.swing.JLabel();
        DurationHoursCombo2 = new javax.swing.JComboBox<>();
        DurationMinutesCombo2 = new javax.swing.JComboBox<>();
        CreateButton3 = new javax.swing.JButton();
        UpdateInfoPanel = new javax.swing.JPanel();
        IdLabel = new javax.swing.JLabel();
        IdField = new javax.swing.JTextField();
        FirstNameLabel = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        LastNameLabel = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        BirthDateLabel = new javax.swing.JLabel();
        BirthDateYearField = new javax.swing.JTextField();
        MonthCombo = new javax.swing.JComboBox<>();
        DayCombo = new javax.swing.JComboBox<>();
        NumberField = new javax.swing.JTextField();
        NumberLabel = new javax.swing.JLabel();
        PhoneNumberPrefixField = new javax.swing.JTextField();
        NumberPrefixLabel = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        CountryLabel = new javax.swing.JLabel();
        CountryField = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();
        AddToFlightPanel = new javax.swing.JPanel();
        IdField2 = new javax.swing.JTextField();
        IdLabel2 = new javax.swing.JLabel();
        FlightLabel2 = new javax.swing.JLabel();
        FlightCombo = new javax.swing.JComboBox<>();
        AddButton = new javax.swing.JButton();
        ShowMyFlightsPanel = new javax.swing.JPanel();
        FlightScrollPane = new javax.swing.JScrollPane();
        FlightDataTable = new javax.swing.JTable();
        RefreshButton = new javax.swing.JButton();
        AllPassengersPanel = new javax.swing.JPanel();
        AllPassengersScrollPane = new javax.swing.JScrollPane();
        PassengersTable = new javax.swing.JTable();
        RefreshButton2 = new javax.swing.JButton();
        AllFlightsPanel = new javax.swing.JPanel();
        AllFlightsScrollPane = new javax.swing.JScrollPane();
        AllFlightsTable = new javax.swing.JTable();
        RefreshButton3 = new javax.swing.JButton();
        AllPlanesPanel = new javax.swing.JPanel();
        RefreshButton4 = new javax.swing.JButton();
        AllPlanesPane = new javax.swing.JScrollPane();
        AllPlanesTable = new javax.swing.JTable();
        AllLocationsPanel = new javax.swing.JPanel();
        AllLocationsPane = new javax.swing.JScrollPane();
        AllLocationsTable = new javax.swing.JTable();
        RefreshButton5 = new javax.swing.JButton();
        DelayFlightPanel = new javax.swing.JPanel();
        HoursCombo = new javax.swing.JComboBox<>();
        HoursLabel = new javax.swing.JLabel();
        IdLabel3 = new javax.swing.JLabel();
        IdCombo = new javax.swing.JComboBox<>();
        MinutesLabel = new javax.swing.JLabel();
        MinutesCombo = new javax.swing.JComboBox<>();
        DelayButton = new javax.swing.JButton();
        LowerPonel = new airport.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        GlobalPanel.setRadius(40);
        GlobalPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ViewActionsRoundPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ViewActionsRoundPanelMouseDragged(evt);
            }
        });
        ViewActionsRoundPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ViewActionsRoundPanelMousePressed(evt);
            }
        });

        CloseButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CloseButton.setText("X");
        CloseButton.setBorderPainted(false);
        CloseButton.setContentAreaFilled(false);
        CloseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewActionsRoundPanelLayout = new javax.swing.GroupLayout(ViewActionsRoundPanel);
        ViewActionsRoundPanel.setLayout(ViewActionsRoundPanelLayout);
        ViewActionsRoundPanelLayout.setHorizontalGroup(
            ViewActionsRoundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewActionsRoundPanelLayout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        ViewActionsRoundPanelLayout.setVerticalGroup(
            ViewActionsRoundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewActionsRoundPanelLayout.createSequentialGroup()
                .addComponent(CloseButton)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        GlobalPanel.add(ViewActionsRoundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        UserInterfaceTabs.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        AdministratorPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        UserButton.setText("User");
        UserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserButtonActionPerformed(evt);
            }
        });
        AdministratorPanel.add(UserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        AdministratorButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AdministratorButton.setText("Administrator");
        AdministratorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdministratorButtonActionPerformed(evt);
            }
        });
        AdministratorPanel.add(AdministratorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        UserSelectCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        UserSelectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        UserSelectCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSelectComboActionPerformed(evt);
            }
        });
        AdministratorPanel.add(UserSelectCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        UserInterfaceTabs.addTab("Administration", AdministratorPanel);

        PassengerRegistrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CountryLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CountryLabel2.setText("Country:");
        PassengerRegistrationPanel.add(CountryLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        IdLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel4.setText("ID:");
        PassengerRegistrationPanel.add(IdLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        FirstNameLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FirstNameLabel2.setText("First Name:");
        PassengerRegistrationPanel.add(FirstNameLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        LastNameLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        LastNameLabel2.setText("Last Name:");
        PassengerRegistrationPanel.add(LastNameLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        BirthdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BirthdateLabel.setText("Birthdate:");
        PassengerRegistrationPanel.add(BirthdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        NumberPrefixLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        NumberPrefixLabel2.setText("+");
        PassengerRegistrationPanel.add(NumberPrefixLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        PrefixField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(PrefixField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        IdField3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(IdField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        BirthDateYearField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BirthDateYearField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthDateYearField2ActionPerformed(evt);
            }
        });
        PassengerRegistrationPanel.add(BirthDateYearField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        CountryField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(CountryField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        NumberField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(NumberField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        PhoneLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PhoneLabel2.setText("Phone:");
        PassengerRegistrationPanel.add(PhoneLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        PlaceHolder.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder.setText("-");
        PassengerRegistrationPanel.add(PlaceHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        LastNameField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(LastNameField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        PlaceHolder2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder2.setText("-");
        PassengerRegistrationPanel.add(PlaceHolder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        MonthCombo2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MonthCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        PassengerRegistrationPanel.add(MonthCombo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        FirstNameField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengerRegistrationPanel.add(FirstNameField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        PlaceHolder3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder3.setText("-");
        PassengerRegistrationPanel.add(PlaceHolder3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        DayCombo2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DayCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        PassengerRegistrationPanel.add(DayCombo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        RegisterButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });
        PassengerRegistrationPanel.add(RegisterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        UserInterfaceTabs.addTab("Passenger registration", PassengerRegistrationPanel);

        AirPlaneRegistrationPanel.setLayout(null);

        IdLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel5.setText("ID:");
        AirPlaneRegistrationPanel.add(IdLabel5);
        IdLabel5.setBounds(53, 96, 22, 25);

        IdField4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPlaneRegistrationPanel.add(IdField4);
        IdField4.setBounds(180, 93, 130, 31);

        BrandLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BrandLabel.setText("Brand:");
        AirPlaneRegistrationPanel.add(BrandLabel);
        BrandLabel.setBounds(53, 157, 52, 25);

        BrandField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPlaneRegistrationPanel.add(BrandField);
        BrandField.setBounds(180, 154, 130, 31);

        ModelField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPlaneRegistrationPanel.add(ModelField);
        ModelField.setBounds(180, 213, 130, 31);

        ModelLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ModelLabel.setText("Model:");
        AirPlaneRegistrationPanel.add(ModelLabel);
        ModelLabel.setBounds(53, 216, 57, 25);

        MaxCapacityField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPlaneRegistrationPanel.add(MaxCapacityField);
        MaxCapacityField.setBounds(180, 273, 130, 31);

        MaxCapacityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MaxCapacityLabel.setText("Max Capacity:");
        AirPlaneRegistrationPanel.add(MaxCapacityLabel);
        MaxCapacityLabel.setBounds(53, 276, 114, 25);

        AirlineField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPlaneRegistrationPanel.add(AirlineField);
        AirlineField.setBounds(180, 333, 130, 31);

        AirlineLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirlineLabel.setText("Airline:");
        AirPlaneRegistrationPanel.add(AirlineLabel);
        AirlineLabel.setBounds(53, 336, 70, 25);

        CreateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateButton.setText("Create");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });
        AirPlaneRegistrationPanel.add(CreateButton);
        CreateButton.setBounds(490, 480, 120, 40);

        UserInterfaceTabs.addTab("Airplane registration", AirPlaneRegistrationPanel);

        AirPortIdLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirPortIdLabel.setText("Airport ID:");

        AirportIdField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportNameLabel.setText("Airport name:");

        AirportNameField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportCityField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportCityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportCityLabel.setText("Airport city:");

        AirportCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportCountry.setText("Airport country:");

        AirportCountryField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportLatitudeField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportLatitudeLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportLatitudeLabel.setText("Airport latitude:");

        AirportLongitudeLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportLongitudeLabel.setText("Airport longitude:");

        AirportLongitudeField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        CreateButton2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateButton2.setText("Create");
        CreateButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LocationRegistrationPanelLayout = new javax.swing.GroupLayout(LocationRegistrationPanel);
        LocationRegistrationPanel.setLayout(LocationRegistrationPanelLayout);
        LocationRegistrationPanelLayout.setHorizontalGroup(
            LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AirPortIdLabel)
                            .addComponent(AirportNameLabel)
                            .addComponent(AirportCityLabel)
                            .addComponent(AirportCountry)
                            .addComponent(AirportLatitudeLabel)
                            .addComponent(AirportLongitudeLabel))
                        .addGap(80, 80, 80)
                        .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AirportLongitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportCityField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportCountryField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportLatitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(CreateButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        LocationRegistrationPanelLayout.setVerticalGroup(
            LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(AirPortIdLabel)
                        .addGap(36, 36, 36)
                        .addComponent(AirportNameLabel)
                        .addGap(34, 34, 34)
                        .addComponent(AirportCityLabel)
                        .addGap(35, 35, 35)
                        .addComponent(AirportCountry)
                        .addGap(35, 35, 35)
                        .addComponent(AirportLatitudeLabel))
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(AirportIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(AirportNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(AirportCityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(AirportCountryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(AirportLatitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AirportLongitudeLabel)
                    .addComponent(AirportLongitudeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(CreateButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        UserInterfaceTabs.addTab("Location registration", LocationRegistrationPanel);

        IdLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel6.setText("ID:");

        IdField5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        PlaneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaneLabel.setText("Plane:");

        PlaneCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaneCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        LocationCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        LocationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        DepartureLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DepartureLocationLabel.setText("Departure location:");

        ArrivalLocationCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ArrivalLocationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        ArrivalLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ArrivalLocationLabel.setText("Arrival location:");

        ScaleLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ScaleLocationLabel.setText("Scale location:");

        ScaleLocationCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ScaleLocationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        DurationLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationLabel2.setText("Duration:");

        DurationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationLabel.setText("Duration:");

        DepartureDateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DepartureDateLabel.setText("Departure date:");

        DepartureDateCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        PlaceHolder4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder4.setText("-");

        MONTH1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTH1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        PlaceHolder7.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder7.setText("-");

        DAY1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAY1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        PlaceHolder8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder8.setText("-");

        MONTH2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTH2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        PlaceHolder9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder9.setText("-");

        DAY2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAY2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        DurationHoursCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationHoursCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        PlaceHolder5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder5.setText("-");

        DurationMinutesCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationMinutesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        PlaceHolder46.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaceHolder46.setText("-");

        DurationHoursCombo2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationHoursCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        DurationMinutesCombo2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DurationMinutesCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        CreateButton3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateButton3.setText("Create");
        CreateButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FlightRegistrationPanelLayout = new javax.swing.GroupLayout(FlightRegistrationPanel);
        FlightRegistrationPanel.setLayout(FlightRegistrationPanelLayout);
        FlightRegistrationPanelLayout.setHorizontalGroup(
            FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(ScaleLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ScaleLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(ArrivalLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ArrivalLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(DepartureLocationLabel)
                        .addGap(46, 46, 46)
                        .addComponent(LocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdLabel6)
                            .addComponent(PlaneLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IdField5)
                            .addComponent(PlaneCombo, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DurationLabel2)
                    .addComponent(DurationLabel)
                    .addComponent(DepartureDateLabel))
                .addGap(18, 18, 18)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(DepartureDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(MONTH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PlaceHolder4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PlaceHolder7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(DAY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(MONTH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PlaceHolder8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PlaceHolder9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(DAY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addComponent(DurationHoursCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PlaceHolder5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(DurationMinutesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                .addComponent(DurationHoursCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PlaceHolder46, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(DurationMinutesCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        FlightRegistrationPanelLayout.setVerticalGroup(
            FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(IdLabel6))
                    .addComponent(IdField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlaneLabel)
                    .addComponent(PlaneCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MONTH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlaceHolder8)
                    .addComponent(PlaceHolder9)
                    .addComponent(DAY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FlightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(DepartureLocationLabel)
                                .addComponent(LocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DepartureDateLabel))
                            .addComponent(DepartureDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MONTH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlaceHolder4)
                            .addComponent(PlaceHolder7)
                            .addComponent(DAY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ArrivalLocationLabel)
                                .addComponent(ArrivalLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DurationLabel))
                            .addComponent(DurationHoursCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlaceHolder5)
                            .addComponent(DurationMinutesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DurationHoursCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlaceHolder46)
                            .addComponent(DurationMinutesCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ScaleLocationLabel)
                                .addComponent(ScaleLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DurationLabel2)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(CreateButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        UserInterfaceTabs.addTab("Flight registration", FlightRegistrationPanel);

        IdLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel.setText("ID:");

        IdField.setEditable(false);
        IdField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdField.setEnabled(false);

        FirstNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FirstNameLabel.setText("First Name:");

        FirstNameField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        LastNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        LastNameLabel.setText("Last Name:");

        LastNameField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        BirthDateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BirthDateLabel.setText("Birthdate:");

        BirthDateYearField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        MonthCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MonthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        MonthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthComboActionPerformed(evt);
            }
        });

        DayCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        NumberField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        NumberLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        NumberLabel.setText("-");

        PhoneNumberPrefixField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        NumberPrefixLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        NumberPrefixLabel.setText("+");

        PhoneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PhoneLabel.setText("Phone:");

        CountryLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CountryLabel.setText("Country:");

        CountryField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        UpdateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UpdateInfoPanelLayout = new javax.swing.GroupLayout(UpdateInfoPanel);
        UpdateInfoPanel.setLayout(UpdateInfoPanelLayout);
        UpdateInfoPanelLayout.setHorizontalGroup(
            UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(IdLabel)
                                .addGap(108, 108, 108)
                                .addComponent(IdField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(FirstNameLabel)
                                .addGap(41, 41, 41)
                                .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(LastNameLabel)
                                .addGap(43, 43, 43)
                                .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(BirthDateLabel)
                                .addGap(55, 55, 55)
                                .addComponent(BirthDateYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(MonthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(DayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(PhoneLabel)
                                .addGap(56, 56, 56)
                                .addComponent(NumberPrefixLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(PhoneNumberPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(NumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(NumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(CountryLabel)
                                .addGap(63, 63, 63)
                                .addComponent(CountryField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(UpdateButton)))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        UpdateInfoPanelLayout.setVerticalGroup(
            UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IdLabel)
                    .addComponent(IdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstNameLabel)
                    .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LastNameLabel)
                    .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BirthDateLabel)
                    .addComponent(BirthDateYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneLabel)
                    .addComponent(NumberPrefixLabel)
                    .addComponent(PhoneNumberPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberLabel)
                    .addComponent(NumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CountryLabel)
                    .addComponent(CountryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(UpdateButton)
                .addGap(113, 113, 113))
        );

        UserInterfaceTabs.addTab("Update info", UpdateInfoPanel);

        IdField2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdField2.setEnabled(false);

        IdLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel2.setText("ID:");

        FlightLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightLabel2.setText("Flight:");

        FlightCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        AddButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddToFlightPanelLayout = new javax.swing.GroupLayout(AddToFlightPanel);
        AddToFlightPanel.setLayout(AddToFlightPanelLayout);
        AddToFlightPanelLayout.setHorizontalGroup(
            AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IdLabel2)
                    .addComponent(FlightLabel2))
                .addGap(79, 79, 79)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IdField2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(829, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddToFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        AddToFlightPanelLayout.setVerticalGroup(
            AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(IdLabel2))
                    .addComponent(IdField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FlightLabel2)
                    .addComponent(FlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        UserInterfaceTabs.addTab("Add to flight", AddToFlightPanel);

        FlightDataTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FlightScrollPane.setViewportView(FlightDataTable);

        RefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowMyFlightsPanelLayout = new javax.swing.GroupLayout(ShowMyFlightsPanel);
        ShowMyFlightsPanel.setLayout(ShowMyFlightsPanelLayout);
        ShowMyFlightsPanelLayout.setHorizontalGroup(
            ShowMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFlightsPanelLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(FlightScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowMyFlightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshButton)
                .addGap(527, 527, 527))
        );
        ShowMyFlightsPanelLayout.setVerticalGroup(
            ShowMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFlightsPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(FlightScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(RefreshButton)
                .addContainerGap())
        );

        UserInterfaceTabs.addTab("Show my flights", ShowMyFlightsPanel);

        PassengersTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassengersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AllPassengersScrollPane.setViewportView(PassengersTable);

        RefreshButton2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshButton2.setText("Refresh");
        RefreshButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AllPassengersPanelLayout = new javax.swing.GroupLayout(AllPassengersPanel);
        AllPassengersPanel.setLayout(AllPassengersPanelLayout);
        AllPassengersPanelLayout.setHorizontalGroup(
            AllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllPassengersPanelLayout.createSequentialGroup()
                .addGroup(AllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AllPassengersPanelLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(RefreshButton2))
                    .addGroup(AllPassengersPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(AllPassengersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        AllPassengersPanelLayout.setVerticalGroup(
            AllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllPassengersPanelLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(AllPassengersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshButton2)
                .addContainerGap())
        );

        UserInterfaceTabs.addTab("Show all passengers", AllPassengersPanel);

        AllFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AllFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AllFlightsScrollPane.setViewportView(AllFlightsTable);

        RefreshButton3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshButton3.setText("Refresh");
        RefreshButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AllFlightsPanelLayout = new javax.swing.GroupLayout(AllFlightsPanel);
        AllFlightsPanel.setLayout(AllFlightsPanelLayout);
        AllFlightsPanelLayout.setHorizontalGroup(
            AllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllFlightsPanelLayout.createSequentialGroup()
                .addGroup(AllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AllFlightsPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(AllFlightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AllFlightsPanelLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(RefreshButton3)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        AllFlightsPanelLayout.setVerticalGroup(
            AllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllFlightsPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(AllFlightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshButton3)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        UserInterfaceTabs.addTab("Show all flights", AllFlightsPanel);

        RefreshButton4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshButton4.setText("Refresh");
        RefreshButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButton4ActionPerformed(evt);
            }
        });

        AllPlanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AllPlanesPane.setViewportView(AllPlanesTable);

        javax.swing.GroupLayout AllPlanesPanelLayout = new javax.swing.GroupLayout(AllPlanesPanel);
        AllPlanesPanel.setLayout(AllPlanesPanelLayout);
        AllPlanesPanelLayout.setHorizontalGroup(
            AllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllPlanesPanelLayout.createSequentialGroup()
                .addGroup(AllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AllPlanesPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshButton4))
                    .addGroup(AllPlanesPanelLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(AllPlanesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        AllPlanesPanelLayout.setVerticalGroup(
            AllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllPlanesPanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(AllPlanesPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(RefreshButton4)
                .addGap(17, 17, 17))
        );

        UserInterfaceTabs.addTab("Show all planes", AllPlanesPanel);

        AllLocationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AllLocationsPane.setViewportView(AllLocationsTable);

        RefreshButton5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshButton5.setText("Refresh");
        RefreshButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AllLocationsPanelLayout = new javax.swing.GroupLayout(AllLocationsPanel);
        AllLocationsPanel.setLayout(AllLocationsPanelLayout);
        AllLocationsPanelLayout.setHorizontalGroup(
            AllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllLocationsPanelLayout.createSequentialGroup()
                .addGroup(AllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AllLocationsPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshButton5))
                    .addGroup(AllLocationsPanelLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(AllLocationsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        AllLocationsPanelLayout.setVerticalGroup(
            AllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllLocationsPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(AllLocationsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(RefreshButton5)
                .addGap(17, 17, 17))
        );

        UserInterfaceTabs.addTab("Show all locations", AllLocationsPanel);

        HoursCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HoursCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        HoursLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HoursLabel.setText("Hours:");

        IdLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdLabel3.setText("ID:");

        IdCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        MinutesLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MinutesLabel.setText("Minutes:");

        MinutesCombo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MinutesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        DelayButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DelayButton.setText("Delay");
        DelayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DelayFlightPanelLayout = new javax.swing.GroupLayout(DelayFlightPanel);
        DelayFlightPanel.setLayout(DelayFlightPanelLayout);
        DelayFlightPanelLayout.setHorizontalGroup(
            DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DelayFlightPanelLayout.createSequentialGroup()
                        .addComponent(MinutesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MinutesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DelayFlightPanelLayout.createSequentialGroup()
                        .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdLabel3)
                            .addComponent(HoursLabel))
                        .addGap(79, 79, 79)
                        .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HoursCombo, 0, 105, Short.MAX_VALUE)
                            .addComponent(IdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DelayFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DelayButton)
                .addGap(531, 531, 531))
        );
        DelayFlightPanelLayout.setVerticalGroup(
            DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdLabel3)
                    .addComponent(IdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HoursLabel)
                    .addComponent(HoursCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MinutesLabel)
                    .addComponent(MinutesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(DelayButton)
                .addGap(33, 33, 33))
        );

        UserInterfaceTabs.addTab("Delay flight", DelayFlightPanel);

        GlobalPanel.add(UserInterfaceTabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout LowerPonelLayout = new javax.swing.GroupLayout(LowerPonel);
        LowerPonel.setLayout(LowerPonelLayout);
        LowerPonelLayout.setHorizontalGroup(
            LowerPonelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        LowerPonelLayout.setVerticalGroup(
            LowerPonelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        GlobalPanel.add(LowerPonel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GlobalPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GlobalPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void ViewActionsRoundPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewActionsRoundPanelMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_ViewActionsRoundPanelMousePressed

    private void ViewActionsRoundPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewActionsRoundPanelMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_ViewActionsRoundPanelMouseDragged

    private void AdministratorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdministratorButtonActionPerformed
        if (UserButton.isSelected()) {
            UserButton.setSelected(false);
            UserSelectCombo.setSelectedIndex(0);

        }
        for (int i = 1; i < UserInterfaceTabs.getTabCount(); i++) {
            UserInterfaceTabs.setEnabledAt(i, true);
        }
        UserInterfaceTabs.setEnabledAt(5, false);
        UserInterfaceTabs.setEnabledAt(6, false);
        UserInterfaceTabs.setEnabledAt(7, false);
    }//GEN-LAST:event_AdministratorButtonActionPerformed

    private void UserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserButtonActionPerformed
        if (AdministratorButton.isSelected()) {
            AdministratorButton.setSelected(false);
        }
        for (int i = 1; i < UserInterfaceTabs.getTabCount(); i++) {

            UserInterfaceTabs.setEnabledAt(i, false);

        }
        UserInterfaceTabs.setEnabledAt(9, true);
        UserInterfaceTabs.setEnabledAt(5, true);
        UserInterfaceTabs.setEnabledAt(6, true);
        UserInterfaceTabs.setEnabledAt(7, true);
        UserInterfaceTabs.setEnabledAt(11, true);
    }//GEN-LAST:event_UserButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        try {
            long id = Long.parseLong(IdField3.getText().trim());
            int phoneCode = Integer.parseInt(PrefixField.getText().trim());
            long phone = Long.parseLong(NumberField2.getText().trim());

            String firstname = FirstNameField2.getText().trim();
            String lastname = LastNameField2.getText().trim();
            String country = CountryField2.getText().trim();

            int year = Integer.parseInt(BirthDateYearField2.getText().trim());
            int month = Integer.parseInt(MonthCombo2.getItemAt(MonthCombo2.getSelectedIndex()));
            int day = Integer.parseInt(DayCombo2.getItemAt(DayCombo2.getSelectedIndex()));

            LocalDate birthDate = LocalDate.of(year, month, day);

            Passenger p = new Passenger(id, firstname, lastname, birthDate, phoneCode, phone, country);
            Response r = passengerController.registerPassenger(p);

            if (r.isSuccess()) {
                JOptionPane.showMessageDialog(this, r.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);
                UserSelectCombo.addItem("" + id);
            } else {
                JOptionPane.showMessageDialog(this, r.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        // TODO add your handling code here:
        String id = IdField4.getText();
        String brand = BrandField.getText();
        String model = ModelField.getText();
        int maxCapacity = Integer.parseInt(MaxCapacityField.getText());
        String airline = AirlineField.getText();

        this.planes.add(new Plane(id, brand, model, maxCapacity, airline));

        this.PlaneCombo.addItem(id);
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void CreateButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButton2ActionPerformed
        // TODO add your handling code here:
        String id = AirportIdField.getText();
        String name = AirportNameField.getText();
        String city = AirportCityField.getText();
        String country = AirportCountryField.getText();
        double latitude = Double.parseDouble(AirportLatitudeField.getText());
        double longitude = Double.parseDouble(AirportLongitudeField.getText());

        this.locations.add(new Location(id, name, city, country, latitude, longitude));

        this.LocationCombo.addItem(id);
        this.ArrivalLocationCombo.addItem(id);
        this.ScaleLocationCombo.addItem(id);
    }//GEN-LAST:event_CreateButton2ActionPerformed

    private void CreateButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButton3ActionPerformed
        // TODO add your handling code here:
        String id = IdField5.getText();
        String planeId = PlaneCombo.getItemAt(PlaneCombo.getSelectedIndex());
        String departureLocationId = LocationCombo.getItemAt(LocationCombo.getSelectedIndex());
        String arrivalLocationId = ArrivalLocationCombo.getItemAt(ArrivalLocationCombo.getSelectedIndex());
        String scaleLocationId = ScaleLocationCombo.getItemAt(ScaleLocationCombo.getSelectedIndex());
        int year = Integer.parseInt(DepartureDateCombo.getText());
        int month = Integer.parseInt(MONTH1.getItemAt(MONTH1.getSelectedIndex()));
        int day = Integer.parseInt(DAY1.getItemAt(DAY1.getSelectedIndex()));
        int hour = Integer.parseInt(MONTH2.getItemAt(MONTH2.getSelectedIndex()));
        int minutes = Integer.parseInt(DAY2.getItemAt(DAY2.getSelectedIndex()));
        int hoursDurationsArrival = Integer.parseInt(DurationHoursCombo.getItemAt(DurationHoursCombo.getSelectedIndex()));
        int minutesDurationsArrival = Integer.parseInt(DurationMinutesCombo.getItemAt(DurationMinutesCombo.getSelectedIndex()));
        int hoursDurationsScale = Integer.parseInt(DurationHoursCombo2.getItemAt(DurationHoursCombo2.getSelectedIndex()));
        int minutesDurationsScale = Integer.parseInt(DurationMinutesCombo2.getItemAt(DurationMinutesCombo2.getSelectedIndex()));

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        Plane plane = null;
        for (Plane p : this.planes) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Location departure = null;
        Location arrival = null;
        Location scale = null;
        for (Location location : this.locations) {
            if (departureLocationId.equals(location.getAirportId())) {
                departure = location;
            }
            if (arrivalLocationId.equals(location.getAirportId())) {
                arrival = location;
            }
            if (scaleLocationId.equals(location.getAirportId())) {
                scale = location;
            }
        }

        Duration duracionVuelo = Duration.ofHours(hoursDurationsArrival).plusMinutes(minutesDurationsArrival);
        Duration duracionEscala = Duration.ofHours(hoursDurationsScale).plusMinutes(minutesDurationsScale);

        Flight vuelo;

        if (scale == null) {
            vuelo = new Flight(id, plane, departure, arrival, null, departureDate, Duration.ZERO, duracionVuelo);
        } else {
            vuelo = new Flight(id, plane, departure, arrival, scale, departureDate, duracionEscala, duracionVuelo);
        }

        Response response = flightController.registerFlight(vuelo);

        if (response.isSuccess()) {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        this.FlightCombo.addItem(id);
    }//GEN-LAST:event_CreateButton3ActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(IdField.getText());
        String firstname = FirstNameField.getText();
        String lastname = LastNameField.getText();
        int year = Integer.parseInt(BirthDateYearField.getText());
        int month = Integer.parseInt(MonthCombo2.getItemAt(MonthCombo.getSelectedIndex()));
        int day = Integer.parseInt(DayCombo2.getItemAt(DayCombo.getSelectedIndex()));
        int phoneCode = Integer.parseInt(PhoneNumberPrefixField.getText());
        long phone = Long.parseLong(NumberField.getText());
        String country = CountryField.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == id) {
                passenger = p;
            }
        }

        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(IdField2.getText());
        String flightId = FlightCombo.getItemAt(FlightCombo.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DelayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelayButtonActionPerformed
        // TODO add your handling code here:
        String flightId = IdCombo.getItemAt(IdCombo.getSelectedIndex());
        int hours = Integer.parseInt(HoursCombo.getItemAt(HoursCombo.getSelectedIndex()));
        int minutes = Integer.parseInt(MinutesCombo.getItemAt(MinutesCombo.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        Response response = flightController.delayFlight(flight.getId(), hours, minutes);

    }//GEN-LAST:event_DelayButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(UserSelectCombo.getItemAt(UserSelectCombo.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) FlightDataTable.getModel();
        model.setRowCount(0);
        Response response = flightController.getAllFlightsSorted();
        if (response.isSuccess()) {
            @SuppressWarnings("unchecked")
            List<Flight> lista = (List<Flight>) response.getData();
            for (Flight flight : lista) {
                model.addRow(new Object[]{
                    flight.getId(),
                    flight.getDepartureTime(),
                    flight.getDepartureTime()
                    .plus(flight.getScaleTime())
                    .plus(flight.getFlightTime())
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Error al cargar los vuelos", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void RefreshButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) PassengersTable.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_RefreshButton2ActionPerformed

    private void RefreshButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AllFlightsTable.getModel();
        model.setRowCount(0);
        Response response = flightController.getAllFlightsSorted();

        if (response.isSuccess()) {
            @SuppressWarnings("unchecked")
            List<Flight> lista = (List<Flight>) response.getData();
            for (Flight flight : lista) {
                model.addRow(new Object[]{
                    flight.getId(),
                    flight.getOrigin().getAirportId(),
                    flight.getDestination().getAirportId(),
                    (flight.getScale() == null ? "-" : flight.getScale().getAirportId()),
                    flight.getDepartureTime(),
                    flight.getDepartureTime().plus(flight.getScaleTime()).plus(flight.getFlightTime()),
                    flight.getPlane().getId(),
                    flight.getNumPassengers()
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Error al obtener vuelos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RefreshButton3ActionPerformed

    private void RefreshButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AllPlanesTable.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_RefreshButton4ActionPerformed

    private void RefreshButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AllLocationsTable.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_RefreshButton5ActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void UserSelectComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSelectComboActionPerformed
        try {
            String id = UserSelectCombo.getSelectedItem().toString();
            if (!id.equals(UserSelectCombo.getItemAt(0))) {
                IdField.setText(id);
                IdField2.setText(id);
            } else {
                IdField.setText("");
                IdField2.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_UserSelectComboActionPerformed

    private void MonthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthComboActionPerformed

    private void BirthDateYearField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthDateYearField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BirthDateYearField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("flatlaf.useNativeLibrary", "false");

        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JPanel AddToFlightPanel;
    private javax.swing.JRadioButton AdministratorButton;
    private javax.swing.JPanel AdministratorPanel;
    private javax.swing.JPanel AirPlaneRegistrationPanel;
    private javax.swing.JLabel AirPortIdLabel;
    private javax.swing.JTextField AirlineField;
    private javax.swing.JLabel AirlineLabel;
    private javax.swing.JTextField AirportCityField;
    private javax.swing.JLabel AirportCityLabel;
    private javax.swing.JLabel AirportCountry;
    private javax.swing.JTextField AirportCountryField;
    private javax.swing.JTextField AirportIdField;
    private javax.swing.JTextField AirportLatitudeField;
    private javax.swing.JLabel AirportLatitudeLabel;
    private javax.swing.JTextField AirportLongitudeField;
    private javax.swing.JLabel AirportLongitudeLabel;
    private javax.swing.JTextField AirportNameField;
    private javax.swing.JLabel AirportNameLabel;
    private javax.swing.JPanel AllFlightsPanel;
    private javax.swing.JScrollPane AllFlightsScrollPane;
    private javax.swing.JTable AllFlightsTable;
    private javax.swing.JScrollPane AllLocationsPane;
    private javax.swing.JPanel AllLocationsPanel;
    private javax.swing.JTable AllLocationsTable;
    private javax.swing.JPanel AllPassengersPanel;
    private javax.swing.JScrollPane AllPassengersScrollPane;
    private javax.swing.JScrollPane AllPlanesPane;
    private javax.swing.JPanel AllPlanesPanel;
    private javax.swing.JTable AllPlanesTable;
    private javax.swing.JComboBox<String> ArrivalLocationCombo;
    private javax.swing.JLabel ArrivalLocationLabel;
    private javax.swing.JLabel BirthDateLabel;
    private javax.swing.JTextField BirthDateYearField;
    private javax.swing.JTextField BirthDateYearField2;
    private javax.swing.JLabel BirthdateLabel;
    private javax.swing.JTextField BrandField;
    private javax.swing.JLabel BrandLabel;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTextField CountryField;
    private javax.swing.JTextField CountryField2;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JLabel CountryLabel2;
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton CreateButton2;
    private javax.swing.JButton CreateButton3;
    private javax.swing.JComboBox<String> DAY1;
    private javax.swing.JComboBox<String> DAY2;
    private javax.swing.JComboBox<String> DayCombo;
    private javax.swing.JComboBox<String> DayCombo2;
    private javax.swing.JButton DelayButton;
    private javax.swing.JPanel DelayFlightPanel;
    private javax.swing.JTextField DepartureDateCombo;
    private javax.swing.JLabel DepartureDateLabel;
    private javax.swing.JLabel DepartureLocationLabel;
    private javax.swing.JComboBox<String> DurationHoursCombo;
    private javax.swing.JComboBox<String> DurationHoursCombo2;
    private javax.swing.JLabel DurationLabel;
    private javax.swing.JLabel DurationLabel2;
    private javax.swing.JComboBox<String> DurationMinutesCombo;
    private javax.swing.JComboBox<String> DurationMinutesCombo2;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JTextField FirstNameField2;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JLabel FirstNameLabel2;
    private javax.swing.JComboBox<String> FlightCombo;
    private javax.swing.JTable FlightDataTable;
    private javax.swing.JLabel FlightLabel2;
    private javax.swing.JPanel FlightRegistrationPanel;
    private javax.swing.JScrollPane FlightScrollPane;
    private airport.PanelRound GlobalPanel;
    private javax.swing.JComboBox<String> HoursCombo;
    private javax.swing.JLabel HoursLabel;
    private javax.swing.JComboBox<String> IdCombo;
    private javax.swing.JTextField IdField;
    private javax.swing.JTextField IdField2;
    private javax.swing.JTextField IdField3;
    private javax.swing.JTextField IdField4;
    private javax.swing.JTextField IdField5;
    private javax.swing.JLabel IdLabel;
    private javax.swing.JLabel IdLabel2;
    private javax.swing.JLabel IdLabel3;
    private javax.swing.JLabel IdLabel4;
    private javax.swing.JLabel IdLabel5;
    private javax.swing.JLabel IdLabel6;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JTextField LastNameField2;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JLabel LastNameLabel2;
    private javax.swing.JComboBox<String> LocationCombo;
    private javax.swing.JPanel LocationRegistrationPanel;
    private airport.PanelRound LowerPonel;
    private javax.swing.JComboBox<String> MONTH1;
    private javax.swing.JComboBox<String> MONTH2;
    private javax.swing.JTextField MaxCapacityField;
    private javax.swing.JLabel MaxCapacityLabel;
    private javax.swing.JComboBox<String> MinutesCombo;
    private javax.swing.JLabel MinutesLabel;
    private javax.swing.JTextField ModelField;
    private javax.swing.JLabel ModelLabel;
    private javax.swing.JComboBox<String> MonthCombo;
    private javax.swing.JComboBox<String> MonthCombo2;
    private javax.swing.JTextField NumberField;
    private javax.swing.JTextField NumberField2;
    private javax.swing.JLabel NumberLabel;
    private javax.swing.JLabel NumberPrefixLabel;
    private javax.swing.JLabel NumberPrefixLabel2;
    private javax.swing.JPanel PassengerRegistrationPanel;
    private javax.swing.JTable PassengersTable;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JLabel PhoneLabel2;
    private javax.swing.JTextField PhoneNumberPrefixField;
    private javax.swing.JLabel PlaceHolder;
    private javax.swing.JLabel PlaceHolder2;
    private javax.swing.JLabel PlaceHolder3;
    private javax.swing.JLabel PlaceHolder4;
    private javax.swing.JLabel PlaceHolder46;
    private javax.swing.JLabel PlaceHolder5;
    private javax.swing.JLabel PlaceHolder7;
    private javax.swing.JLabel PlaceHolder8;
    private javax.swing.JLabel PlaceHolder9;
    private javax.swing.JComboBox<String> PlaneCombo;
    private javax.swing.JLabel PlaneLabel;
    private javax.swing.JTextField PrefixField;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton RefreshButton2;
    private javax.swing.JButton RefreshButton3;
    private javax.swing.JButton RefreshButton4;
    private javax.swing.JButton RefreshButton5;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JComboBox<String> ScaleLocationCombo;
    private javax.swing.JLabel ScaleLocationLabel;
    private javax.swing.JPanel ShowMyFlightsPanel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JPanel UpdateInfoPanel;
    private javax.swing.JRadioButton UserButton;
    private javax.swing.JTabbedPane UserInterfaceTabs;
    private javax.swing.JComboBox<String> UserSelectCombo;
    private airport.PanelRound ViewActionsRoundPanel;
    // End of variables declaration//GEN-END:variables
}
